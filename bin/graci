#!/usr/bin/env python
"""
The main graci driver.
"""
import os
import sys as sys
import graci.utils.timing as timing
import graci.core.dft as dft
import graci.core.refspace as refspace
import d3CI.core.mrci as mrci
import d3CI.core.fileio as fileio

#
def init():
    """
    Initializes graci

    Read command line arguments 
    Set relevant global variables.
    """

    fileio.params['input_file'] = sys.argv[1].strip()
    job_stub  = fileio.d3_params['input_file'].split('.inp')[0]
    pyscf_out = job_stub+'.pyscf.out'
    eri       = job_stub+'.eri.h5'

    if '-o' in sys.argv:
        out_file = sys.argv[sys.argv.index('-o')+1].strip()
    else:
        out_file  = job_stub+'.out'

    fileio.d3_params['out_file']  = out_file
    fileio.d3_params['pyscf_out'] = pyscf_out
    fileio.d3_params['eri']       = eri
    return

#
def main():
    """Runs a d3CI computation."""

    # start the global timer
    timing.start('global')

    init()

    # parse input
    mol = fileio.parse_input()

    # print output file header
    fileio.print_header(mol)
 
    # evaluate the KS DFT energy    
    dft.evaluate_dft(mol)

    # generate the reference space
#    refspace.generate(mol)

    # perform the selected CI computation
#    mrci.evalaute(mol)

    # end global timer

    # print timing summaries and do cleanup
    fileio.cleanup()


if __name__ == '__main__':

    # run the main routine
    main()

