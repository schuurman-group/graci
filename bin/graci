#!/usr/bin/env python
"""
The main graci driver.
"""
import os
import sys as sys
import graci.utils.timing as timing
import graci.core.driver as driver
import graci.core.params as params
import graci.io.parse as parse
import graci.io.output as output

#
@timing.timed
def main():
    """Runs a GRaCI computation."""

    # start the global timer
    #timing.start('global')

    # read command line options
    read_cmdline()

    # parse input, construct list of objects and 
    # put them in obj_array
    obj_array = parse.parse_input()

    # build and run computation
    graci_driver = driver.Driver()    
    graci_driver.run(obj_array)

    # cleanup
    output.print_cleanup()

    return


def read_cmdline():
    """
    Read command line arguments
    Set relevant global variables.
    """

    output.file_names['input_file'] = sys.argv[1].strip()
    job_stub  = output.file_names['input_file'].split('.inp')[0]
    pyscf_out = job_stub+'.pyscf.out'

    if '-o' in sys.argv:
        out_file = sys.argv[sys.argv.index('-o')+1].strip()
    else:
        out_file   = None 
        #out_file  = job_stub+'.out'

    if '-nproc' in sys.argv:
        params.nproc = int(sys.argv[sys.argv.index('-nproc')+1].strip())
    else:
        params.nproc = 1

    output.file_names['out_file']   = out_file
    output.file_names['pyscf_out']  = pyscf_out
    output.file_names['chkpt_file'] = job_stub+'.chkpt.h5'
    return

if __name__ == '__main__':
    
    # run the main routine
    main()

